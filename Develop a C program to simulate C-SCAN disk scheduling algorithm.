#include <stdio.h>

#define MAX 100

void cscan(int arr[], int n, int head, int direction) {
    int seek_sequence[MAX], distance[MAX], seek_count = 0, cur_track;
    int i, j;

    // Sort the request array
    for (i = 0; i < n; i++) {
        for (j = i + 1; j < n; j++) {
            if (arr[i] > arr[j]) {
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }

    // Add the head to the seek sequence
    seek_sequence[seek_count++] = head;

    // Run the C-SCAN algorithm
    if (direction == 1) {
        for (i = 0; i < n; i++) {
            if (arr[i] >= head) {
                seek_sequence[seek_count++] = arr[i];
            }
        }
        seek_sequence[seek_count++] = 0; // Jump to the beginning
        for (i = 0; i < n; i++) {
            if (arr[i] < head) {
                seek_sequence[seek_count++] = arr[i];
            }
        }
    } else {
        for (i = n - 1; i >= 0; i--) {
            if (arr[i] <= head) {
                seek_sequence[seek_count++] = arr[i];
            }
        }
        seek_sequence[seek_count++] = MAX - 1; // Jump to the end
        for (i = n - 1; i >= 0; i--) {
            if (arr[i] > head) {
                seek_sequence[seek_count++] = arr[i];
            }
        }
    }

    // Calculate total seek time
    int total_seek_time = 0;
    for (i = 0; i < seek_count - 1; i++) {
        total_seek_time += abs(seek_sequence[i + 1] - seek_sequence[i]);
    }

    // Print the seek sequence
    printf("Seek Sequence: ");
    for (i = 0; i < seek_count; i++) {
        printf("%d ", seek_sequence[i]);
    }
    printf("\nTotal Seek Time: %d\n", total_seek_time);
}

int main() {
    int arr[MAX], n, head, direction;

    printf("Enter the number of requests: ");
    scanf("%d", &n);
    printf("Enter the requests:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    printf("Enter the initial head position: ");
    scanf("%d", &head);
    printf("Enter the direction (1 for right, 0 for left): ");
    scanf("%d", &direction);

    cscan(arr, n, head, direction);

    return 0;
}
